堆设置
-Xms:初始堆大小
-Xmx:最大堆大小
-Xmn:新生代大小
-Xss:每个线程的堆栈大小
-XX:NewRatio:设置新生代和老年代的比值。如：为3，表示年轻代与老年代比值为1：3
-XX:SurvivorRatio:新生代中Eden区与两个Survivor区的比值。注意Survivor区有两个。如：为3，表示Eden：Survivor=3：2，一个Survivor区占整个新生代的1/5  
-XX:MaxTenuringThreshold:设置转入老年代的存活次数。如果是0，则直接跳过新生代进入老年代
-XX:PermSize、-XX:MaxPermSize:分别设置永久代最小大小与最大大小（Java8以前）
-XX:MetaspaceSize、-XX:MaxMetaspaceSize:分别设置元空间最小大小与最大大小（Java8以后）
收集器设置
-XX:+UseSerialGC:设置串行收集器
-XX:+UseParallelGC:设置并行收集器
-XX:+UseParalledlOldGC:设置并行老年代收集器
-XX:+UseConcMarkSweepGC:设置并发收集器
垃圾回收统计信息
-XX:+PrintGC
-XX:+PrintGCDetails
-XX:+PrintGCTimeStamps
-Xloggc:filename
并行收集器设置
-XX:ParallelGCThreads=n:设置并行收集器收集时使用的CPU数。并行收集线程数。
-XX:MaxGCPauseMillis=n:设置并行收集最大暂停时间
-XX:GCTimeRatio=n:设置垃圾回收时间占程序运行时间的百分比。公式为1/(1+n)
并发收集器设置
-XX:+CMSIncrementalMode:设置为增量模式。适用于单CPU情况。
-XX:ParallelGCThreads=n:设置并发收集器新生代收集方式为并行收集时，使用的CPU数。并行收集线程数。



1.开启server模式，启动时间长，效率快，jvm.cfg文件中修改
2.修改堆内存最大和最小内存：-Xms默认1/64，-Xmx默认1/4，-Xmx空闲小于40%JVM增加，-Xmx空闲大于70%JVM减小，-Xms和-Xmx设置成一样，可以减少切换时的额外时间
3.修改堆内存新生代内存：-Xmn(持久代一般固定64M)，年轻代大老年代小，建议设置为堆内存的3/8，(-Xmx减去-Xmn等于老年代内存)。
4.修改线程堆栈大小：-Xss太小容易栈溢出，-Xmn太大影响线程数量，建议为1M
5.回收器的选择：串行收集器、并行收集器、并发收集器。可以配置年轻代使用并发收集器，老年代使用并行收集器；如果响应时间有限，就选择并发收集器，尽可能设大年轻代。
6.禁用Tomcat的DNS查询：修改 server.xml 文件中的 enableLookups 参数值
7.Tomcat连接数过大可能引起死机：在Tomcat的server.xml中修改最大线程数、初始化线程数等参数

年老代溢出：java.lang.OutOfMemoryError: Java heap space
持久代溢出：java.lang.OutOfMemoryError: PermGen space
堆栈溢出：java.lang.StackOverflowError
线程溢出：Fatal: Stack size too smal
内存溢出：java.lang.OutOfMemoryError: unable to create new native thread